DEFINE_GLOBAL STRING ENCHANT_TYPE  "A"        //A - ARMOR | W - WEAPON
DEFINE_GLOBAL STRING ENCHANT_GRADE "S"       //GRADE ENCHANT
DEFINE_GLOBAL INT    USAR_BLESSED  1          //Use blessed? 1 use, 0 not
DEFINE_GLOBAL INT    BLES          3          //Use blessed lvl

// DEFINE_GLOBAL ARRAYLIST ARMOR_ITEMS
// DEFINE_GLOBAL ARRAYLIST WEAPON_ITEMS

DEFINE_GLOBAL ARRAYLIST LISTA_ITENS


CALL_EXTERN "MovingSniffer.l2s" START_SNIFF_MOVEPACKETS VOID 0


//ARMOR_ITEMS.ADD "#$Elegia Leather Breastplate"
//WEAPON_ITEMS.ADD "#$Archangel Sword"

//LISTA_ITENS.ADD "#$Vesper Slasher"

//LISTA_ITENS.ADD "#$Archangel Sword"
//LISTA_ITENS.ADD "#$Earring of Antharas" 
//LISTA_ITENS.ADD "#$Zaken's Earring" 
//LISTA_ITENS.ADD "#$Ring of Baium"   
//LISTA_ITENS.ADD "#$Ring of Queen Ant"   
//LISTA_ITENS.ADD "#$Frintezza's Necklace"
//LISTA_ITENS.ADD "#$Elegia Leather Boots"
/*
LISTA_ITENS.ADD "#$Elegia Leather Breastplate"
LISTA_ITENS.ADD "#$Elegia Leather Legging"
LISTA_ITENS.ADD "#$Elegia Leather Helmet"
LISTA_ITENS.ADD "#$Elegia Leather Gloves"



LISTA_ITENS.ADD "#$Vesper Noble Circlet"
LISTA_ITENS.ADD "#$Vesper Noble Tunic"
LISTA_ITENS.ADD "#$Vesper Noble Stockings"
LISTA_ITENS.ADD "#$Vesper Noble Shoes"
LISTA_ITENS.ADD "#$Vesper Noble Gloves"
LISTA_ITENS.ADD "#$Vesper Sigil"

LISTA_ITENS.ADD "#$Vesper Necklace"
LISTA_ITENS.ADD "#$Vesper Earring"
LISTA_ITENS.ADD "#$Vesper Ring"
*/
LISTA_ITENS.ADD "#$Elegia Necklace"

LISTA_ITENS.ADD "#$Elegia Ring"
LISTA_ITENS.ADD "#$Elegia Earring"
//LISTA_ITENS.ADD "#$Vesper Breastplate {PvP} "
//LISTA_ITENS.ADD "#$Elegia Gaiter"
//LISTA_ITENS.ADD "#$Elegia Boots"
//LISTA_ITENS.ADD "#$Elegia Helmet"
//LISTA_ITENS.ADD "#$Elegia Gauntlet"

DEFINE_GLOBAL INT DEBUGG 1                 //0=false | 1=true
DEFINE_GLOBAL INT TS 2118                  //Time Sleep
DEFINE_GLOBAL INT MAX 16                   //Max enchant
DEFINE_GLOBAL INT ITENS_RESTANTES 0        //Itens reimi..
DEFINE_GLOBAL INT TENTATIVAS 100           //Time answer (100 = 10sec)


//--//--//--//--//Dont change - nao altere o código abaixo!!!!//--//--//--//--//--//

INCLUDE "StdLib\inventory.l2c"

SET_EVENT "<&SCRIPTEVENT_SERVERPACKET&>" "<&SYSTEM_CURRENTFILE&>" ITEM_ENCANTADO 135
SET_EVENT "<&SCRIPTEVENT_SERVERPACKET&>" "<&SYSTEM_CURRENTFILE&>" POR_ITEM 124
SET_EVENT "<&SCRIPTEVENT_SERVERPACKETEX&>" "<&SYSTEM_CURRENTFILE&>" CLICK_ENCHANT 129

SET_EVENT "<&SCRIPTEVENT_SERVERPACKET&>" "<&SYSTEM_CURRENTFILE&>" TRADE 112
SET_EVENT "<&SCRIPTEVENT_CHAT&>" "<&SYSTEM_CURRENTFILE&>" CHAT
SET_EVENT "<&SCRIPTEVENT_SYSTEMMESSAGE&>" "<&SYSTEM_CURRENTFILE&>" ConfirmTrade


DEFINE_GLOBAL STRING ENCHANT ""
DEFINE_GLOBAL STRING ENCHANTBLES ""

IF ENCHANT_TYPE == #$A
    ENCHANT = "#$Scroll: Enchant Armor (<&ENCHANT_GRADE&>-Grade)"
    ENCHANTBLES = "#$Blessed Scroll: Enchant Armor (<&ENCHANT_GRADE&>-Grade)"
ENDIF
IF ENCHANT_TYPE == #$W
    ENCHANT = "#$Scroll: Enchant Weapon (<&ENCHANT_GRADE&>-Grade)"
    ENCHANTBLES = "#$Blessed Scroll: Enchant Weapon (<&ENCHANT_GRADE&>-Grade)"
ENDIF


DEFINE_GLOBAL INT VARITEM_ENCANTADO 0
DEFINE_GLOBAL INT VARITEM_ENCANTADOEX 0
DEFINE_GLOBAL INT VARPOR_ITEM 0
DEFINE_GLOBAL INT VARCLICK_ENCHANT 0

DEFINE_GLOBAL ARRAYLIST INV 0
DEFINE_GLOBAL ARRAYLIST ITEM 0
DEFINE_GLOBAL INT NIVEL_ENCHANT 0
DEFINE_GLOBAL INT MENOR_ENCHANT 0

DEFINE_GLOBAL BYTEBUFFER LEITURA 4
DEFINE_GLOBAL STRING IDSCROLL ""
DEFINE_GLOBAL STRING IDSCROLLBLES ""
DEFINE_GLOBAL STRING IDITEMHEX ""
DEFINE_GLOBAL INT QTDSCROLL 0
DEFINE_GLOBAL INT QTDSCROLLBLES 0
DEFINE_GLOBAL INT REMOVEDOR 0
DEFINE_GLOBAL INT IDITEM 0
DEFINE_GLOBAL INT QNTD_ITENS 0
DEFINE_GLOBAL STRING ITEMNAME ""
DEFINE_GLOBAL INT REINICIAR 0


DO
	REINICIAR = ZERO
	FOREACH K STRING LISTA_ITENS
    	ITEMNAME = LISTA_ITENS.K
    	DEBUG VOID 1 "#$Starting the enchant item: <&ITEMNAME&>"
    	DO
			GET_INVENTORY INV
			ITEM.CLEAR
			FOREACH I INVENTORY INV
			
		//	PRINT_TEXT "<&INV.I.NAME&>"
			
				IF INV.I.NAME.TO_UPPER == ITEMNAME.TO_UPPER
					ITEM.ADD INV.I
				ENDIF 
				
				IF INV.I.NAME.TO_UPPER == ENCHANT.TO_UPPER
                	//ITEM_COUNT QTDSCROLL "<&INV.I.ITEM_ID&>"
                	QTDSCROLL = INV.I.COUNT
                	LEITURA.RESET_INDEX
                	LEITURA.WRITE_INT32 INV.I.ID
                	IDSCROLL = "#$<&LEITURA.GET_HEX&>"
            	ENDIF
            	
            	IF INV.I.NAME.TO_UPPER == ENCHANTBLES.TO_UPPER
                	//ITEM_COUNT QTDSCROLLBLES "<&INV.I.ITEM_ID&>"
                	QTDSCROLLBLES = INV.I.COUNT
                	LEITURA.RESET_INDEX
                	LEITURA.WRITE_INT32 INV.I.ID
                	IDSCROLLBLES = "#$<&LEITURA.GET_HEX&>"
            	ENDIF
        	NEXTEACH
        	
			QNTD_ITENS = ITEM.LENGTH
			CALL CHECKQTD
			IF REINICIAR == #I2
				BREAK 3
			ENDIF
			MENOR_ENCHANT = #I-1
			
			FOREACH I INVENTORY ITEM
				IF MENOR_ENCHANT == #I-1
					MENOR_ENCHANT = ITEM.I.ENCHANT
				ENDIF
				
				IF MENOR_ENCHANT > ITEM.I.ENCHANT
					MENOR_ENCHANT = ITEM.I.ENCHANT
				ENDIF
			NEXTEACH
			
			ITEM.CLEAR
			
			FOREACH I INVENTORY INV
            	IF INV.I.NAME == ITEMNAME 
                	IF INV.I.ENCHANT <= MENOR_ENCHANT
                    	ITEM.ADD INV.I
                	ENDIF
            	ENDIF
			NEXTEACH

			IF QNTD_ITENS > ITENS_RESTANTES
            	CALL ENCHANTARTUDO
        	ENDIF         
        	
        	IF MENOR_ENCHANT >= MAX
           		BREAK 2
        	ENDIF
    	LOOP QNTD_ITENS > ITENS_RESTANTES
	NEXTEACH

	DEBUG VOID 1 "#$SCRIPT TERMINATED!"
	REINICIAR = #I2

	DO
    	IF REINICIAR == ONE
        	DEBUG VOID 1 "#$Prepare enchant"        
        	BREAK 2
    	ENDIF
    	SLEEP 2000
	LOOP ONE == ONE
	
	REINICIAR = ZERO
	SLEEP 1000
LOOP ONE == ONE    

END_SCRIPT

FUNCTION ENCHANTARTUDO
	FOREACH I INVENTORY ITEM
    	NIVEL_ENCHANT = ITEM.I.ENCHANT
    	IDITEM = ITEM.I.ID
    	CALL ENCANTAR
    	BREAK 1
	NEXTEACH
RETURN VOID 

FUNCTION ENCANTAR
	DEFINE INT AUX 0
	
	//DEBUG VOID 1 "#$<&NIVEL_ENCHANT&> >= <&MAX&>"
	IF NIVEL_ENCHANT >= MAX
    	DEBUG VOID 1 "#$Finish enchant item: <&ITEMNAME&>"
    	RETURN VOID
	ELSE
    	AUX = NIVEL_ENCHANT + ONE
    	DEBUG VOID 1 "#$Trying to enchant <&ITEMNAME&> to +<&AUX&>"
	ENDIF

	IF USAR_BLESSED == ONE
    	IF NIVEL_ENCHANT >= BLES
        	INJECT "19 <&IDSCROLLBLES&>00 00 00 00"
        	QTDSCROLLBLES = ZERO
   		ELSE
        	INJECT "19 <&IDSCROLL&>00 00 00 00"
        	QTDSCROLL = ZERO
    	ENDIF
	ELSE
    	INJECT "19 <&IDSCROLL&>00 00 00 00"
    	QTDSCROLL = ZERO
	ENDIF

	LEITURA.RESET_INDEX
	LEITURA.WRITE_UINT32 IDITEM
	IDITEMHEX = "#$<&LEITURA.GET_HEX&>"
	AUX = ZERO
	DO
    	SLEEP 100
    	IF VARPOR_ITEM == ONE
        	BREAK 2
    	ENDIF
    	AUX = AUX + ONE
    	IF AUX == TENTATIVAS
        	INJECT "D0 4E 00"
        	SLEEP 1000
        	INJECT "D0 4E 00"
        	RETURN VOID
    	ENDIF
	LOOP ONE == ONE

	INJECT "D0 4C 00 <&IDITEMHEX&>"

	VARPOR_ITEM = ZERO
	AUX = ZERO
	DO
    	SLEEP 100
    	IF VARCLICK_ENCHANT == ONE
        	BREAK 2
    	ENDIF
    	AUX = AUX + ONE
    	IF AUX == TENTATIVAS
        	INJECT "D0 4E 00"
        	SLEEP 1000
        	INJECT "D0 4E 00"
        	RETURN VOID
    	ENDIF
	LOOP ONE == ONE
	
	INJECT "5F <&IDITEMHEX&>00 00 00 00" 	
	VARCLICK_ENCHANT = ZERO
	AUX = ZERO 
	  	
	SLEEP 500 //"<&TS&>"
	//DEBUG VOID 1 "#$SLEEP 500"
	
	DO
    	IF VARITEM_ENCANTADO == ONE
    	    BREAK 2
    	ENDIF
    	SLEEP 100
    	AUX = AUX + ONE
    	IF AUX == TENTATIVAS
    	    RETURN VOID
    	ENDIF
	LOOP ONE == ONE

	VARITEM_ENCANTADO = ZERO
	VARITEM_ENCANTADOEX = ZERO  
RETURN VOID

FUNCTION CHECKQTD
	DEBUG VOID 1 "#$Count: <&QTDSCROLL&> normal and <&QTDSCROLLBLES&> blesseds"

	IF QTDSCROLL <= ZERO
    	IF USAR_BLESSED == ONE
        	IF BLES > ONE
            	DEBUG VOID 1 "#$I cant found next <&ENCHANT&>"
            	REINICIAR = #I2
        	ENDIF
    	ELSE
        	DEBUG VOID 1 "#$I cant found next <&ENCHANT&>"
        	REINICIAR = #I2
    	ENDIF
	ENDIF

	IF QTDSCROLLBLES <= ZERO
    	IF USAR_BLESSED == ONE
        	DEBUG VOID 1 "#$I cant found next <&ENCHANTBLES&>"
        	REINICIAR = #I2
    	ENDIF    
	ENDIF
RETURN VOID

// result packet
FUNCTION ITEM_ENCANTADO
//	DEBUG VOID 1 "#$F:ITEM_ENCANTADO"
	//SLEEP "<&TS&>"
	SLEEP 500
	VARITEM_ENCANTADO = #i1
	SLEEP 500
	VARITEM_ENCANTADO = ZERO
RETURN VOID

FUNCTION ITEM_ENCANTADOEX
//	DEBUG VOID 1 "#$F:ITEM_ENCANTADOEX"
	SLEEP "<&TS&>"
	VARITEM_ENCANTADOEX = #i1
	SLEEP 1000
	VARITEM_ENCANTADOEX = ZERO
RETURN VOID

//packet after use scroll
FUNCTION POR_ITEM 
//	DEBUG VOID 1 "#$F:POR_ITEM"
	//SLEEP 500
	VARPOR_ITEM = #i1
	SLEEP 500
	VARPOR_ITEM = ZERO
RETURN VOID

// Packet after item added
FUNCTION CLICK_ENCHANT
	DEFINE INT RAND
//	DEBUG VOID 1 "#$F:CLICK_ENCHANT"
	GET_RAND RAND 2118 2412 
	SLEEP "<&RAND&>"	
	VARCLICK_ENCHANT = #i1
//	DEBUG VOID 1 "#$F:CLICK_ENCHANT1"
	SLEEP 500
	VARCLICK_ENCHANT = ZERO
RETURN VOID


FUNCTION CHAT
IF MESSAGETYPE == CHANNEL_PRIVATE
    DEFINE BYTEBUFFER CARALHO 8
    DEFINE STRING CARALHO5 ""
    DEFINE ARRAYLIST INV 0
    DEFINE STRING UID " "
    DEFINE STRING HEXCONT " "
    DEFINE INT AUX 0
    DEFINE INT DEST 0
    DEFINE INT ID 0
    IF MESSAGE == "#$pegar itens"
        COMMAND "/target <&SENDERNAME&>"
        SLEEP 1500
        COMMAND "/trade <&SENDERNAME&>"
        SLEEP 4000
        GET_INVENTORY INV
        FOREACH S STRING LISTA_ITENS
            FOREACH I Inventory INV
                IF INV.I.NAME == LISTA_ITENS.S
                    ID = INV.I.ID
                    UID = "ID<&INV.I&>".GET_HEX32
                    ITEM_GET_ID DEST "<&INV.I.NAME&>"
                    AUX = INV.I.COUNT
                    IF AUX == ZERO
                        AUX = ONE
                    ENDIF
                    CARALHO.RESET_INDEX
                    CARALHO.WRITE_UINT64 AUX
                    CARALHO5 = "#$<&CARALHO.GET_HEX&>"
                    INJECT "1B 01 00 00 00 <&UID&><&CARALHO5&>"
                    SLEEP 1000
                ENDIF
            NEXTEACH
        NEXTEACH
    INJECT "1C 01 00 00 00"
    ENDIF
ENDIF
RETURN VOID


FUNCTION TRADE
IF REINICIAR == #I2
    INJECT "55 01 00 00 00"
ELSE
    SLEEP 3245
    INJECT "55 00 00 00 00"
ENDIF
RETURN VOID

FUNCTION ConfirmTrade
    IF "MESSAGE.CONTAINS #$confirmed" == TRUE
        SLEEP 500
        DEBUG VOID 1 "#$Trade Confirmed."
        INJECT "1C 01 00 00 00"
        SLEEP 1500
        REINICIAR = ONE
    ENDIF
RETURN VOID

FUNCTION DEBUG 1 TEXT
	IF DEBUGG == 1
		PRINT_TEXT "<&TEXT&>"
		//SAY_TO_CLIENT "0" "<&TEXT&>"
		//INJECT_CLIENT "4A 00 00 00 00 12 00 00 00 00 00 00 00 <&TEXT.GET_HEX&>"
		DEFINE BYTEBUFFER SAY 2048
		SAY.WRITE_BYTE 0x4A
		SAY.WRITE_INT32 NULL
		SAY.WRITE_INT32 18
		SAY.WRITE_STRING "#$"
		SAY.WRITE_STRING TEXT
		SAY.TRIM_TO_INDEX
		INJECTBB_CLIENT SAY
		DELETE SAY
	ENDIF
RETURN VOID