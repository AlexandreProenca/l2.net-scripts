// Kratky popis
// Server: 
// Autor: mochitto
// Date: 
// Special thanks for L2.NET contributors
// rev.: 0
PRINT_TEXT "SCRIPT STARTED!]"
SET_EVENT "<&SCRIPTEVENT_CLIENTPACKET&>" "<&SYSTEM_CURRENTFILE&>" REQUESTBYPASS 35
BLOCK_CLIENT 35

DEFINE_GLOBAL ARRAYLIST DEFINED_POINTS
DEFINE_GLOBAL INT DEBUG_CLIENT 1


BUILD_WINDOW VOID 0
	
SLEEP 9872983472
	
PRINT_TEXT "SCRIPT STOPED!]"
END_SCRIPT


FUNCTION REQUESTBYPASS
	DEFINE INT PACKET_ID
	DEFINE STRING BYPASS 	
	
	PACKET.READ_BYTE PACKET_ID
	PACKET.READ_STRING BYPASS
	
	IF BYPASS.CONTAINS "#$jTg8j_" == TRUE
		BYPASS = BYPASS.REPLACE "#$jTg8j_" #$
		HANDLE_BYPASS VOID 1 BYPASS
	ELSE
		DEFINE BYTEBUFFER REQUESTBYPASS 9999
		REQUESTBYPASS.WRITE_BYTE PACKET_ID
		REQUESTBYPASS.WRITE_STRING BYPASS
		REQUESTBYPASS.TRIM_TO_INDEX
		INJECTBB REQUESTBYPASS
		DELETE REQUESTBYPASS
	ENDIF
RETURN VOID

FUNCTION HANDLE_BYPASS 1 BYPASS
	IF BYPASS.CONTAINS "#$points_main" == TRUE
		BUILD_WINDOW VOID 0
		RETURN VOID	
	ENDIF
	IF BYPASS.CONTAINS "#$add_point" == TRUE
		DEFINE ARRAYLIST TMP_POINT
		TMP_POINT.ADD CHAR_X
		TMP_POINT.ADD CHAR_Y
		TMP_POINT.ADD CHAR_Z
		DEFINED_POINTS.ADD TMP_POINT
		DEBUG VOID 1 "#$coord <&TMP_POINT.0&>, <&TMP_POINT.1&>, <&TMP_POINT.2&> was added to list"
		BUILD_WINDOW VOID 0
		RETURN VOID	
	ENDIF
	IF BYPASS.CONTAINS "#$clear_points" == TRUE
		DEFINED_POINTS.CLEAR
		DEBUG VOID 1 "#$list cleared"
		BUILD_WINDOW VOID 0		
		RETURN VOID	
	ENDIF
	IF BYPASS.CONTAINS "#$remove_point" == TRUE
		DEFINE ARRAYLIST LIST
		EXPLODE LIST 2 "#$ " BYPASS
		DEFINED_POINTS.REMOVE "<&LIST.1&>"
		BUILD_WINDOW VOID 0		
		RETURN VOID	
	ENDIF	
	IF BYPASS.CONTAINS "#$save_points_window" == TRUE
		BUILD_SAVE_WINDOW VOID 0
		RETURN VOID
	ENDIF
	IF BYPASS.CONTAINS "#$save_points" == TRUE	
		DEFINE ARRAYLIST LIST
		EXPLODE LIST 2 "#$ " BYPASS
		DEFINE STRING FNAME "trace_<&DEFINED_POINTS.COUNT&>_<&RANDI&>.txt"
		DEFINE STRING FINFO
		IF LIST.COUNT >= 3
			FNAME = "#$trace_" + LIST.1 + "#$.txt"
			FINFO = "#$#" + LIST.2 + "#$\n"
		ENDIF
		DEFINE STRING TEXT
		FOR A 0 "<&DEFINED_POINTS.COUNT&>" 1
			TEXT = TEXT + DEFINED_POINTS.A.0 + "#$ "
			TEXT = TEXT + DEFINED_POINTS.A.1 + "#$ "
			TEXT = TEXT + DEFINED_POINTS.A.2 + "#$\n"                                            
		NEXT
		TEXT = FINFO + TEXT + "#$__EOF"
		DEFINE FILEWRITER FW "<&FNAME&>"
		FW.WRITE TEXT 
		FW.FLUSH
		FW.CLOSE
		DELETE FW
		BUILD_WINDOW VOID 0		
		RETURN VOID	
	ENDIF
	IF BYPASS.CONTAINS "#$try_move2" == TRUE
		DEBUG VOID 1 "#$Moving from back..."
		DEFINE ARRAYLIST TMP
		TMP = DEFINED_POINTS.CLONE
		TMP.REVERSE	 
		FOR A 0 "<&TMP.COUNT&>" 1
			DEBUG VOID 1 "#$MOVE: <&TMP.A.0&> <&TMP.A.1&> <&TMP.A.2&>" 
            WALK_TO VOID 3 TMP.A.0 TMP.A.1 TMP.A.2			                     
		NEXT 
		BUILD_WINDOW VOID 0		
		RETURN VOID	
	ENDIF
	IF BYPASS.CONTAINS "#$try_move" == TRUE	 
		DEBUG VOID 1 "#$Moving from start..."
		FOR A 0 "<&DEFINED_POINTS.COUNT&>" 1
			DEBUG VOID 1 "#$MOVE: <&DEFINED_POINTS.A.0&> <&DEFINED_POINTS.A.1&> <&DEFINED_POINTS.A.2&>" 
            WALK_TO VOID 3 DEFINED_POINTS.A.0 DEFINED_POINTS.A.1 DEFINED_POINTS.A.2                        
		NEXT 
		BUILD_WINDOW VOID 0		
		RETURN VOID	
	ENDIF
	DEBUG VOID 1 "#$<&BYPASS&> was not found..."
	BUILD_WINDOW VOID 0
RETURN VOID 

FUNCTION WALK_TO 3 X Y Z
    DEFINE INT TDIST 0           
    DISTANCE TDIST X Y 0 "<&CHAR_X&>" "<&CHAR_Y&>" 0
    WHILE TDIST > #i60
        MOVE_TO "<&X&>" "<&Y&>" "<&Z&>"
        SLEEP 500
        DISTANCE TDIST X Y 0 "<&CHAR_X&>" "<&CHAR_Y&>" 0
    WEND
RETURN VOID

FUNCTION DEBUG 1 TEXT
	PRINT_TEXT "<&TEXT&>"
	IF DEBUG_CLIENT == 1
		DEFINE BYTEBUFFER SAY 2048
		SAY.WRITE_BYTE 0x4A
		SAY.WRITE_INT32 NULL
		SAY.WRITE_INT32 18
		SAY.WRITE_STRING "#$"
		SAY.WRITE_INT32 -1
		SAY.WRITE_STRING TEXT
		SAY.TRIM_TO_INDEX
		INJECTBB_CLIENT SAY
		DELETE SAY
	ENDIF
RETURN VOID

FUNCTION NPCHTMLMESSAGE 1 HTM
     DEFINE BYTEBUFFER B_NPCHTMLMESSAGE 99999
     B_NPCHTMLMESSAGE.WRITE_BYTE 25 // 0X19
     B_NPCHTMLMESSAGE.WRITE_INT32 #I1
     B_NPCHTMLMESSAGE.WRITE_STRING HTM
     B_NPCHTMLMESSAGE.WRITE_INT32 #I0
     B_NPCHTMLMESSAGE.TRIM_TO_INDEX
     INJECTBB_CLIENT B_NPCHTMLMESSAGE
     DELETE B_NPCHTMLMESSAGE
RETURN VOID

FUNCTION BUILD_WINDOW
	DEFINE STRING TEXT
	
	DEFINE STRING TD "<td>"
	DEFINE STRING E_TD "</td>"
	DEFINE STRING TR "<tr>"
	DEFINE STRING E_TR "</tr>"
	DEFINE STRING BR "<br>"
	DEFINE STRING CENTER "<center>"
	DEFINE STRING E_CENTER "</center>"
	DEFINE STRING BUTTON
	
	TEXT = "#$<html><body>"
	TEXT = TEXT + "#$<table width=270>"
	DEFINE_BUTTON BUTTON 4 "#$ADD" "#$bypass jTg8j_add_point" 40 21
	TEXT = TEXT + TR + TD + BUTTON + E_TD
	DEFINE_BUTTON BUTTON 4 "#$CLEAR" "#$bypass jTg8j_clear_points" 50 21
	TEXT = TEXT + TD + BUTTON  + E_TD 
	DEFINE_BUTTON BUTTON 4 "#$SAVE" "#$bypass jTg8j_save_points_window" 45 21
	TEXT = TEXT + TD + BUTTON  + E_TD 
	DEFINE_BUTTON BUTTON 4 "#$MOVE" "#$bypass jTg8j_try_move" 45 21
	TEXT = TEXT + TD + BUTTON  + E_TD 
	DEFINE_BUTTON BUTTON 4 "#$MOVE2" "#$bypass jTg8j_try_move2" 50 21
	TEXT = TEXT + TD + BUTTON  + E_TD + E_TR
	TEXT = TEXT + "#$</table>" + CENTER
	TEXT = TEXT + "#$<table width=275 bgcolor=000000 cellspacing=0 cellpadding=0>"
	FOR A 0 "<&DEFINED_POINTS.COUNT&>" 1
		TEXT = TEXT + TR
		TEXT = TEXT + "#$<td fixwidth=\"13\">" + A + "#$." + E_TD
		TEXT = TEXT + TD + DEFINED_POINTS.A.0 + E_TD
		TEXT = TEXT + TD + DEFINED_POINTS.A.1 + E_TD
		TEXT = TEXT + TD + DEFINED_POINTS.A.2 + E_TD
		DEFINE_BUTTON BUTTON 4 "#$x" "#$bypass jTg8j_remove_point <&A&>" 20 20
		TEXT = TEXT + "#$<td fixwidth=\"22\" align=\"right\">" + BUTTON + E_TD
		TEXT = TEXT + E_TR                                                  
	NEXT
	TEXT = TEXT + "#$</table>" + E_CENTER
	TEXT = TEXT + "#$</html></body>"
	
	NPCHTMLMESSAGE VOID 1 TEXT
RETURN VOID

FUNCTION BUILD_SAVE_WINDOW
	DEFINE STRING TEXT
	
	DEFINE STRING TD "<td>"
	DEFINE STRING E_TD "</td>"
	DEFINE STRING TR "<tr>"
	DEFINE STRING E_TR "</tr>"
	DEFINE STRING BR "<br>"
	DEFINE STRING CENTER "<center>"
	DEFINE STRING E_CENTER "</center>"
	DEFINE STRING BUTTON
	
	TEXT = "#$<html><body>"
	TEXT = TEXT + "#$<table width=270 cellspacing=1 cellpadding=2>"                                                      
	TEXT = TEXT + TR + TD + "#$ FILE NAME: " + E_TD + E_TR 
	TEXT = TEXT + TR + TD + "#$<edit var=\"fname\" width=\"100\" height=\"15\">" + E_TD + E_TR
	TEXT = TEXT + TR + TD + E_TD + E_TR 
	TEXT = TEXT + TR + TD + "#$ FILE INFO: " + E_TD + E_TR 
	TEXT = TEXT + TR + TD + "#$<edit var=\"finfo\" width=\"180\" height=\"15\">" + E_TD + E_TR	
	TEXT = TEXT + "#$</table><br>"
	DEFINE_BUTTON BUTTON 4 "#$SAVE" "#$bypass jTg8j_save_points $fname $finfo" 50 20
	TEXT = TEXT + BUTTON   
	DEFINE_BUTTON BUTTON 4 "#$BACK" "#$bypass jTg8j_points_main" 50 20
	TEXT = TEXT + BUTTON                          
	TEXT = TEXT + "#$</html></body>"
	
	NPCHTMLMESSAGE VOID 1 TEXT
RETURN VOID

FUNCTION DEFINE_BUTTON 4 VALUE BYPASS WIDTH HEIGHT
	DEFINE STRING BUTTON
	BUTTON = "#$<button value=\"" + VALUE + "#$\" action=\"" + BYPASS + "#$\" width=\"" + WIDTH + "#$\" height=\"" + HEIGHT + "#$\" back=\"L2UI_ct1.button_df_Click\" fore=\"L2UI_ct1.button_df\">"
RETURN BUTTON

//FROM ENGINEX
   FUNCTION EXPLODE 2 SEPARATOR GETSTRING
      DEFINE ARRAYLIST STRINGS 0
      DEFINE INT STRPOS 0
      DEFINE STRING SUBSTR ""
      IF SEPARATOR == "#$"
			WHILE STRPOS < GETSTRING.LENGTH
            SUBSTR = GETSTRING.SUBSTRING STRPOS #i1
            STRINGS.ADD "#$<&SUBSTR&>"
            STRPOS = STRPOS + #i1
			WEND
      ELSE
			DEFINE INT LAST_LETTERS_COUNT 0
			DEFINE STRING OLDSTR ""
			WHILE STRPOS < GETSTRING.LENGTH
            LAST_LETTERS_COUNT = GETSTRING.LENGTH - STRPOS
            IF LAST_LETTERS_COUNT > SEPARATOR.LENGTH
               SUBSTR = GETSTRING.SUBSTRING STRPOS "#i<&SEPARATOR.LENGTH&>"
               IF SEPARATOR == SUBSTR
                  STRINGS.ADD "#$<&OLDSTR&>"
                  OLDSTR = "#$"
                  STRPOS = STRPOS + "#i<&SEPARATOR.LENGTH&>"
               ELSE
                  SUBSTR = GETSTRING.SUBSTRING STRPOS #i1
                  OLDSTR = "#$<&OLDSTR&><&SUBSTR&>"
                  STRPOS = STRPOS + #i1
               ENDIF
            ELSE
               SUBSTR = GETSTRING.SUBSTRING STRPOS "#i<&LAST_LETTERS_COUNT&>"
               IF SEPARATOR == SUBSTR
						STRINGS.ADD "#$<&OLDSTR&>"
						STRINGS.ADD "#$"
					ELSE
						STRINGS.ADD "#$<&OLDSTR&><&SUBSTR&>"
					ENDIF
               STRPOS = GETSTRING.LENGTH
            ENDIF
			WEND
      ENDIF
   RETURN STRINGS