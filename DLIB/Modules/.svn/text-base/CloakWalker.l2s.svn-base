// Cloak Walker
// by d00d.mailbox@gmail.com
//
// This script intercepts movement packets generated by a walker client and
// flips the movement type bit from "keyboard" (FALSE) to "mouse" (TRUE).
// This has historically been used to detect l2walker as it is unlikely that
// human players will use the keyboard 100% of the time and not the
// mouse.
//
// This script also traps the initial RequestGMList packet all walker clients
// send to the server upon initial login (regardless of refresh time settings
// under GM Strategy) and drops the packet silently.
//
// This script should be started at the character select screen before the
// character logs in.
//
// v1.0 - Initial Release [08/25/09]
// v1.1 - Fixed a typo with some pre-release artifacts
// v1.2 - Cut and paste typo fix!
// v2.0 - Ported to a DLIB module
//
// Usage:
//   CALL_EXTERN "DLIB\Modules\CloakWalker.l2s" Module::DLIB::CloakWalker VOID 0

FUNCTION Module::DLIB::CloakWalker

  Module::Init::GlobalVariables VOID 0
  
  THREAD Module::DLIB::CloakWalker::Unpack::MoveBackwardToLocation
  
RETURN VOID

FUNCTION Module::Init::GlobalVariables

  DEFINE_GLOBAL QUEUE Module::DLIB::CloakWalker::Pipeline::MoveBackwardToLocation

  BLOCK_CLIENT 15
  BLOCK_CLIENT 139
  
  Module::DLIB::Init::Events VOID 0
  
RETURN VOID

FUNCTION Module::DLIB::Init::Events

  SET_EVENT "<&SCRIPTEVENT_CLIENTPACKET&>" "<&SYSTEM_CURRENTFILE&>" Module::DLIB::CloakWalker::Packet::MoveBackwardToLocation 15
  SET_EVENT "<&SCRIPTEVENT_CLIENTPACKET&>" "<&SYSTEM_CURRENTFILE&>" Module::DLIB::CloakWalker::Packet::RequestGMList 139

RETURN VOID

FUNCTION Module::DLIB::CloakWalker::Packet::RequestGMList

  PRINT_TEXT "Silently dropping RequestGMList packet"

RETURN VOID

FUNCTION Module::DLIB::CloakWalker::Packet::MoveBackwardToLocation

  Module::DLIB::CloakWalker::Pipeline::MoveBackwardToLocation.ADD PACKET
  
RETURN VOID

FUNCTION Module::DLIB::CloakWalker::Unpack::MoveBackwardToLocation

  DEFINE BYTEBUFFER _bInject 1024
  DEFINE BYTEBUFFER _bMoveBackwardToLocation

  DEFINE INT header
  DEFINE INT targetX
  DEFINE INT targetY
  DEFINE INT targetZ
  DEFINE INT originX
  DEFINE INT originY
  DEFINE INT originZ
  DEFINE INT movetype

  WHILE ONE == ONE
  
    IF Module::DLIB::CloakWalker::Pipeline::MoveBackwardToLocation.COUNT > ZERO
    
      _bMoveBackwardToLocation = Module::DLIB::CloakWalker::Pipeline::MoveBackwardToLocation.POP
      
      _bMoveBackwardToLocation.READ_BYTE  header
      _bMoveBackwardToLocation.READ_INT32 targetX
      _bMoveBackwardToLocation.READ_INT32 targetY
      _bMoveBackwardToLocation.READ_INT32 targetZ
      _bMoveBackwardToLocation.READ_INT32 originX
      _bMoveBackwardToLocation.READ_INT32 originY
      _bMoveBackwardToLocation.READ_INT32 originZ
      _bMoveBackwardToLocation.READ_INT32 movetype
      
      IF movetype == ZERO
        movetype = ONE
        
        _bInject.WRITE_BYTE  header
        _bInject.WRITE_INT32 targetX
        _bInject.WRITE_INT32 targetY
        _bInject.WRITE_INT32 targetZ
        _bInject.WRITE_INT32 originX
        _bInject.WRITE_INT32 originY
        _bInject.WRITE_INT32 originZ
        _bInject.WRITE_INT32 movetype  
        _bInject.TRIM_TO_INDEX
        _bInject.RESET_INDEX
        INJECTBB _bInject
      ELSE
        _bMoveBackwardToLocation.RESET_INDEX        
        INJECTBB _bMoveBackwardToLocation
      ENDIF
      
    ENDIF
    
    SLEEP 50
  WEND

RETURN VOID