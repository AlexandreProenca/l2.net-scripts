
INCLUDE Include/Travel/Core/TravelRoute.l2c
CLASS TRAVEL_CORE NULL

   /***************************\
   \***************************/

	VAR_START

		PUBLIC ARRAYLIST AREAS 0
		PUBLIC SORTEDLIST ROUTES 0
		PUBLIC STRING __CALCULATE_ROUTE ""

	VAR_END

   /***************************\
   \***************************/

	PUBLIC CONSTRUCT 0

		DEFINE ARRAYLIST AREACONTENT 0
		ENGINEX.FILES.READ_FILE AREACONTENT 2 "#$Travel/Areas.txt" "#$__EOF"

		FOREACH I1 STRING AREACONTENT
			TRAVEL.CORE.AREAS.ADD "#$<&AREACONTENT.I1&>"
		NEXTEACH

	RETURN VOID

   /***************************\
   \***************************/

	PUBLIC CREATE_ROUTE 1 ROUTENAME

		IF ("TRAVEL.CORE.ROUTES.CONTAINS_KEY <&ROUTENAME&>" == TRUE)
			PRINT_TEXT "Travel-Core :: Cant create Route '<&ROUTENAME&>' - Route already existing"
			RETURN VOID
		ENDIF

		DEFINE TRAVELROUTE ROUTE 0
		TRAVEL.CORE.ROUTES.ADD "ROUTE" "<&ROUTENAME&>"

	RETURN VOID

   /***************************\
   \***************************/

	PUBLIC ADD_AREA 2 ROUTENAME AREANAME

		IF ("TRAVEL.CORE.ROUTES.CONTAINS_KEY <&ROUTENAME&>" == FALSE)
			PRINT_TEXT "Travel-Core :: Cant add Area '<&AREANAME&>' to Route '<&ROUTENAME&>' - Route doesnt existing"
			RETURN VOID
		ENDIF

		DEFINE INT AREA_EXISTS 0
		FOREACH I STRING TRAVEL.CORE.AREAS
			IF (TRAVEL.CORE.AREAS.I == AREANAME)
				AREA_EXISTS = TRUE
			ENDIF
		NEXTEACH
		IF (AREA_EXISTS == FALSE)
			PRINT_TEXT "Travel-Core :: Cant add Area '<&AREANAME&>' to Route '<&ROUTENAME&>' - Area doesnt exist"
			RETURN VOID
		ENDIF

		DEFINE INT AREA_ADDED 0
		FOREACH I STRING TRAVEL.CORE.ROUTES.ROUTENAME.AREAS
			IF (TRAVEL.CORE.ROUTES.ROUTENAME.AREAS.I == AREANAME)
				AREA_ADDED = TRUE
			ENDIF
		NEXTEACH
		IF (AREA_ADDED == TRUE)
			PRINT_TEXT "Travel-Core :: Cant add Area '<&AREANAME&>' to Route '<&ROUTENAME&>' - Area already added"
			RETURN VOID
		ENDIF

		TRAVEL.CORE.ROUTES.ROUTENAME.AREAS.ADD "#$<&AREANAME&>"

	RETURN VOID

   /***************************\
   \***************************/

	PUBLIC ADD_SPOT 3 ROUTENAME AREANAME POINTID

		IF ("TRAVEL.CORE.ROUTES.CONTAINS_KEY <&ROUTENAME&>" == FALSE)
			PRINT_TEXT "Travel-Core :: Cant add Spot '<&AREANAME&>|<&POINTID&>' to Route '<&ROUTENAME&>' - Route doesnt existing"
			RETURN VOID
		ENDIF

		DEFINE INT AREA_ADDED 0
		FOREACH I STRING TRAVEL.CORE.ROUTES.ROUTENAME.AREAS
			IF (TRAVEL.CORE.ROUTES.ROUTENAME.AREAS.I == AREANAME)
				AREA_ADDED = TRUE
			ENDIF
		NEXTEACH
		IF (AREA_ADDED == FALSE)
			PRINT_TEXT "Travel-Core :: Cant add Spot '<&AREANAME&>|<&POINTID&>' to Route '<&ROUTENAME&>' - Area wasnt added"
			RETURN VOID
		ENDIF

		TRAVEL.CORE.ROUTES.ROUTENAME.SPOTS.ADD "#$<&AREANAME&>|<&POINTID&>"

	RETURN VOID

   /***************************\
   \***************************/

	PUBLIC CALCULATE 1 ROUTENAME

		IF ("TRAVEL.CORE.ROUTES.CONTAINS_KEY <&ROUTENAME&>" == FALSE)
			PRINT_TEXT "Travel-Core :: Cant calculate Route '<&ROUTENAME&>' - Route doesnt existing"
			RETURN VOID
		ENDIF

		IF (TRAVEL.CORE.ROUTES.ROUTENAME.IS_CALCULATING == TRUE)
			PRINT_TEXT "Travel-Core :: Cant calculate Route '<&ROUTENAME&>' - Already calculating"
			RETURN VOID
		ENDIF

		IF (TRAVEL.CORE.ROUTES.ROUTENAME.SPOTS.COUNT < #i2)
			PRINT_TEXT "Travel-Core :: Cant calculate Route '<&ROUTENAME&>' - Need atleast 2 Spots"
			RETURN VOID
		ENDIF

		TRAVEL.CORE.__CALCULATE_ROUTE = "#$<&ROUTENAME&>"
		THREAD CALCULATE_THREAD

		WHILE (TRAVEL.CORE.__CALCULATE_ROUTE != "#$")
			SLEEP 100
		WEND

	RETURN VOID

   /***************************\
   \***************************/

	PUBLIC CALCULATE_THREAD 0

		DEFINE STRING ROUTENAME "<&TRAVEL.CORE.__CALCULATE_ROUTE&>"
		TRAVEL.CORE.ROUTES.ROUTENAME.IS_CALCULATING = TRUE
		TRAVEL.CORE.__CALCULATE_ROUTE = "#$"

		DEFINE SORTEDLIST DIJKDATA 0
		DEFINE SORTEDLIST COORDS 0


		DEFINE STRING _AREANAME ""
		DEFINE ARRAYLIST _POINTSTRINGS 0
		DEFINE ARRAYLIST _POINTDATA 0
		FOREACH AREA_I STRING TRAVEL.CORE.ROUTES.ROUTENAME.AREAS

			_AREANAME = "#$<&TRAVEL.CORE.ROUTES.ROUTENAME.AREAS.AREA_I&>"

			ENGINEX.FILES.READ_FILE _POINTSTRINGS 2 "#$Travel/Areas/<&_AREANAME&>/Points.txt" "#$__EOF"
			FOREACH POINTSTRING_I STRING _POINTSTRINGS

				ENGINEX.STRINGS.EXPLODE _POINTDATA 2 "#$|" "#$<&_POINTSTRINGS.POINTSTRING_I&>"

				DEFINE ARRAYLIST _CONNECTIONS 0
				COORDS.ADD "#$<&_POINTDATA.1&>|<&_POINTDATA.2&>|<&_POINTDATA.3&>" "<&_AREANAME&>|<&_POINTDATA.0&>"
				DIJKDATA.ADD _CONNECTIONS "<&_POINTDATA.1&>|<&_POINTDATA.2&>|<&_POINTDATA.3&>"
				DELETE _CONNECTIONS

			NEXTEACH
		NEXTEACH
		DELETE _AREANAME
		DELETE _POINTSTRINGS
		DELETE _POINTDATA


		FOREACH SPOT_I STRING TRAVEL.CORE.ROUTES.ROUTENAME.SPOTS
			IF ("COORDS.CONTAINS_KEY <&TRAVEL.CORE.ROUTES.ROUTENAME.SPOTS.SPOT_I&>" == FALSE)
				PRINT_TEXT "Travel-Core :: Cant calculate Route '<&ROUTENAME&>' - Spot '<&TRAVEL.CORE.ROUTES.ROUTENAME.SPOTS.SPOT_I&>' isnt existing"
				TRAVEL.CORE.ROUTES.ROUTENAME.IS_CALCULATING = FALSE
				RETURN VOID
			ENDIF
		NEXTEACH


		DEFINE STRING _AREANAME ""
		DEFINE ARRAYLIST _CONNECTIONSTRINGS 0
		DEFINE ARRAYLIST _CONNECTIONDATA 0
		DEFINE ARRAYLIST _FROMPOINT_KEY 0
		DEFINE ARRAYLIST _FROMPOINT 0
		DEFINE ARRAYLIST _TOPOINT_KEY 0
		DEFINE ARRAYLIST _TOPOINT 0
		FOREACH AREA_I STRING TRAVEL.CORE.ROUTES.ROUTENAME.AREAS

			_AREANAME = "#$<&TRAVEL.CORE.ROUTES.ROUTENAME.AREAS.AREA_I&>"

			ENGINEX.FILES.READ_FILE _CONNECTIONSTRINGS 2 "#$Travel/Areas/<&_AREANAME&>/Connections.txt" "#$__EOF"
			FOREACH CONNECTIONSTRING_I STRING _CONNECTIONSTRINGS

				ENGINEX.STRINGS.EXPLODE _CONNECTIONDATA 2 "#$|" "#$<&_CONNECTIONSTRINGS.CONNECTIONSTRING_I&>"

				_FROMPOINT_KEY = "#$<&_AREANAME&>|<&_CONNECTIONDATA.0&>"
				_FROMPOINT = "#$<&COORDS._FROMPOINT_KEY&>"
				_TOPOINT_KEY = "#$<&_CONNECTIONDATA.1&>|<&_CONNECTIONDATA.2&>"

				IF ("COORDS.CONTAINS_KEY <&_TOPOINT_KEY&>" == TRUE)
					_TOPOINT = "#$<&COORDS._TOPOINT_KEY&>"
					DIJKDATA._FROMPOINT.ADD "#$<&_TOPOINT&>"
				ENDIF

			NEXTEACH
		NEXTEACH
		DELETE _AREANAME
		DELETE _CONNECTIONSTRINGS
		DELETE _CONNECTIONDATA
		DELETE _FROMPOINT_KEY
		DELETE _FROMPOINT
		DELETE _TOPOINT_KEY
		DELETE _TOPOINT


		TRAVEL.CORE.ROUTES.ROUTENAME.WALKPOINTS.CLEAR
		DEFINE ARRAYLIST WALKCOORDS 0

		DEFINE SORTEDLIST COORDINATES 0
		TRAVEL.DIJKSTRA.GET_COORDINATES COORDINATES 1 DIJKDATA

		DEFINE INT LOOPEND "<&TRAVEL.CORE.ROUTES.ROUTENAME.SPOTS.COUNT&>"
		LOOPEND = LOOPEND - #i1
		DEFINE INT TO_SPOT_I 0
		DEFINE STRING FROM_COORD ""
		DEFINE STRING TO_COORD ""
		FOR FROM_SPOT_I 0 "<&LOOPEND&>" 1
			TO_SPOT_I = TO_SPOT_I + #i1

			FROM_COORD = "#$<&COORDS.#$<&TRAVEL.CORE.ROUTES.ROUTENAME.SPOTS.FROM_SPOT_I&>&>"
			TO_COORD = "#$<&COORDS.#$<&TRAVEL.CORE.ROUTES.ROUTENAME.SPOTS.TO_SPOT_I&>&>"
			TRAVEL.DIJKSTRA.SHORTEST_PATH WALKCOORDS 4 "#$<&FROM_COORD&>" "#$<&TO_COORD&>" DIJKDATA COORDINATES

			DEFINE INT LAST_INDEX -1
			LAST_INDEX = LAST_INDEX + TRAVEL.CORE.ROUTES.ROUTENAME.WALKPOINTS.COUNT
			IF (LAST_INDEX >= ZERO)
				TRAVEL.CORE.ROUTES.ROUTENAME.WALKPOINTS.REMOVE "<&LAST_INDEX&>"
			ENDIF
			DELETE LAST_INDEX

			FOREACH WALKCOORD_I STRING WALKCOORDS
				TRAVEL.CORE.ROUTES.ROUTENAME.WALKPOINTS.ADD "#$<&WALKCOORDS.WALKCOORD_I&>"
			NEXTEACH
			WALKCOORDS.CLEAR
		NEXT

		TRAVEL.CORE.ROUTES.ROUTENAME.IS_CALCULATING = FALSE
	RETURN VOID

   /***************************\
   \***************************/

	PUBLIC START_ROUTE 1 ROUTENAME

		IF ("TRAVEL.CORE.ROUTES.CONTAINS_KEY <&ROUTENAME&>" == FALSE)
			PRINT_TEXT "Travel-Core :: Cant start Route '<&ROUTENAME&>' - Route doesnt exist"
			RETURN VOID
		ENDIF

		IF (TRAVEL.CORE.ROUTES.ROUTENAME.IS_CALCULATING == TRUE)
			PRINT_TEXT "Travel-Core :: Cant start Route '<&ROUTENAME&>' - Still calculating"
			RETURN VOID
		ENDIF

		IF (TRAVEL.CORE.ROUTES.ROUTENAME.WALKPOINTS.COUNT == 0)
			PRINT_TEXT "Travel-Core :: Cant calculate Route '<&ROUTENAME&>' - No path found"
			RETURN VOID
		ENDIF

		TRAVEL.WALKER.START_PATH VOID 1 TRAVEL.CORE.ROUTES.ROUTENAME.WALKPOINTS

	RETURN VOID

   /***************************\
   \***************************/

END_CLASS
