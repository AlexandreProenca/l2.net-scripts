
CLASS TRAVEL_WALKER NULL

   /***************************\
   \***************************/

	VAR_START

		PUBLIC INT __CUR_POINT_I 0

		PUBLIC ARRAYLIST __POINTS_ORIGINAL 0
		PUBLIC ARRAYLIST __POINTS_OFFSET 0
		PUBLIC ARRAYLIST __POINTS_MOVETO 0

		PUBLIC INT IS_WALKING 0
		PUBLIC INT ABORT 0

		PUBLIC INT __MOVE 0
		PUBLIC INT __WAIT 0
		PUBLIC INT __RUNNING 0

      PUBLIC INT __UNSTUCKS 0

	VAR_END

   /***************************\
   \***************************/

	PUBLIC CONSTRUCT 0

	RETURN VOID

   /***************************\
   \***************************/

	PUBLIC START_PATH 1 PATHPOINTS

		IF (TRAVEL.WALKER.__RUNNING == TRUE)
			PRINT_TEXT "Travel-Walker :: Cant start again - Already walking"
			RETURN VOID
		ENDIF

		TRAVEL.WALKER.__POINTS_ORIGINAL.CLEAR
		TRAVEL.WALKER.__POINTS_OFFSET.CLEAR
		TRAVEL.WALKER.__POINTS_MOVETO.CLEAR

      DEFINE ARRAYLIST POSITION_DATA 0

      SWITCH PATHPOINTS.CLASSNAME
         CASE #$ARRAYLIST
            FOREACH POINT_I STRING PATHPOINTS
               ENGINEX.STRINGS.EXPLODE POSITION_DATA 2 "#$|" "#$<&PATHPOINTS.POINT_I&>"
               IF (POSITION_DATA.COUNT != #i3)
                  BREAK 3
               ENDIF
               DEFINE VECTOR3 POSITION 0
               POSITION.SET VOID 3 POSITION_DATA.0 POSITION_DATA.1 POSITION_DATA.2
               TRAVEL.WALKER.__POINTS_ORIGINAL.ADD POSITION
               DELETE POSITION
               DEFINE VECTOR3 POSITION 0
               POSITION.SET VOID 3 POSITION_DATA.0 POSITION_DATA.1 POSITION_DATA.2
               TRAVEL.WALKER.__POINTS_OFFSET.ADD POSITION
               DELETE POSITION
               DEFINE VECTOR3 POSITION 0
               POSITION.SET VOID 3 POSITION_DATA.0 POSITION_DATA.1 POSITION_DATA.2
               TRAVEL.WALKER.__POINTS_MOVETO.ADD POSITION
               DELETE POSITION
            NEXTEACH
            BREAK 1

         CASE #$STRING
            ENGINEX.STRINGS.EXPLODE POSITION_DATA 2 "#$|" "#$<&PATHPOINTS&>"
            IF (POSITION_DATA.COUNT != #i3)
               BREAK 2
            ENDIF
            DEFINE VECTOR3 POSITION 0
            POSITION.SET VOID 3 POSITION_DATA.0 POSITION_DATA.1 POSITION_DATA.2
            TRAVEL.WALKER.__POINTS_ORIGINAL.ADD POSITION
            DELETE POSITION
            DEFINE VECTOR3 POSITION 0
            POSITION.SET VOID 3 POSITION_DATA.0 POSITION_DATA.1 POSITION_DATA.2
            TRAVEL.WALKER.__POINTS_OFFSET.ADD POSITION
            DELETE POSITION
            DEFINE VECTOR3 POSITION 0
            POSITION.SET VOID 3 POSITION_DATA.0 POSITION_DATA.1 POSITION_DATA.2
            TRAVEL.WALKER.__POINTS_MOVETO.ADD POSITION
            DELETE POSITION
            BREAK 1

         DEFAULT
            BREAK 1

      ENDSWITCH

		TRAVEL.WALKER.IS_WALKING = TRUE
		TRAVEL.WALKER.__RUNNING = TRUE
		THREAD MOVE_THREAD
		THREAD UNSTUCK_THREAD

	RETURN VOID

   /***************************\
   \***************************/

	PUBLIC __CREATE_POINT 0

		DEFINE INT POINT_I "<&TRAVEL.WALKER.__CUR_POINT_I&>"
		DEFINE INT __DISTANCE 0
		DEFINE VECTOR3 POSITION 0

		ENGINEX.GEO.POINT_RANDOM_OFFSET POSITION 4 TRAVEL.WALKER.__POINTS_ORIGINAL.POINT_I.X TRAVEL.WALKER.__POINTS_ORIGINAL.POINT_I.Y TRAVEL.WALKER.__POINTS_ORIGINAL.POINT_I.Z #i30
		TRAVEL.WALKER.__POINTS_OFFSET.POINT_I.SET VOID 3 "#i<&POSITION.X&>" "#i<&POSITION.Y&>" "#i<&POSITION.Z&>"

		DISTANCE __DISTANCE CHAR_X CHAR_Y CHAR_Z TRAVEL.WALKER.__POINTS_OFFSET.POINT_I.X TRAVEL.WALKER.__POINTS_OFFSET.POINT_I.Y TRAVEL.WALKER.__POINTS_OFFSET.POINT_I.Z

		POINT_I = POINT_I + #i1
		IF (POINT_I < TRAVEL.WALKER.__POINTS_ORIGINAL.COUNT)
			__DISTANCE = __DISTANCE + #i50
		ENDIF
		POINT_I = POINT_I - #i1

		ENGINEX.GEO.POINT_ON_LINE POSITION 7 CHAR_X CHAR_Y CHAR_Z TRAVEL.WALKER.__POINTS_OFFSET.POINT_I.X TRAVEL.WALKER.__POINTS_OFFSET.POINT_I.Y TRAVEL.WALKER.__POINTS_OFFSET.POINT_I.Z __DISTANCE
		TRAVEL.WALKER.__POINTS_MOVETO.POINT_I.SET VOID 3 "#i<&POSITION.X&>" "#i<&POSITION.Y&>" "#i<&POSITION.Z&>"

	RETURN VOID

   /***************************\
   \***************************/

	PUBLIC MOVE_THREAD

		DEFINE INT __DISTANCE 0

		TRAVEL.WALKER.ABORT = FALSE
		FOR POINT_I 0 "<&TRAVEL.WALKER.__POINTS_ORIGINAL.COUNT&>" 1

			TRAVEL.WALKER.__CUR_POINT_I = "#i<&POINT_I&>"
			TRAVEL.WALKER.__CREATE_POINT VOID 0
			MOVE_TO "<&TRAVEL.WALKER.__POINTS_MOVETO.POINT_I.X&>" "<&TRAVEL.WALKER.__POINTS_MOVETO.POINT_I.Y&>" "<&TRAVEL.WALKER.__POINTS_MOVETO.POINT_I.Z&>"

			WHILE (TRUE == TRUE)

				DISTANCE __DISTANCE CHAR_X CHAR_Y CHAR_Z TRAVEL.WALKER.__POINTS_OFFSET.POINT_I.X TRAVEL.WALKER.__POINTS_OFFSET.POINT_I.Y TRAVEL.WALKER.__POINTS_OFFSET.POINT_I.Z
            IF (__DISTANCE < #i50)
               TRAVEL.WALKER.__UNSTUCKS = ZERO
               BREAK 2
            ENDIF

				LOCK TRAVEL.WALKER
				UNLOCK TRAVEL.WALKER
				IF (TRAVEL.WALKER.ABORT == TRUE)
					BREAK 3
				ENDIF

				SLEEP "<&__DISTANCE&>"
			WEND

		NEXT
		TRAVEL.WALKER.__POINTS_ORIGINAL.CLEAR
		TRAVEL.WALKER.__POINTS_OFFSET.CLEAR
		TRAVEL.WALKER.__POINTS_MOVETO.CLEAR
		TRAVEL.WALKER.IS_WALKING = FALSE
		TRAVEL.WALKER.__RUNNING = FALSE
		TRAVEL.WALKER.ABORT = FALSE

	RETURN VOID

   /***************************\
   \***************************/

	PUBLIC UNSTUCK_THREAD 0

		DEFINE INT CHAR_X_OLD 0
		DEFINE INT CHAR_Y_OLD 0
		DEFINE INT CHAR_Z_OLD 0

		DEFINE INT POINT_I 0
      TRAVEL.WALKER.__UNSTUCKS = ZERO

		WHILE (TRAVEL.WALKER.__RUNNING == TRUE)

			IF (CHAR_X_OLD == CHAR_X)
				IF (CHAR_Y_OLD == CHAR_Y)
					IF (CHAR_Z_OLD == CHAR_Z)

                  TRAVEL.WALKER.__UNSTUCKS = TRAVEL.WALKER.__UNSTUCKS + #i1
                  IF (TRAVEL.WALKER.__UNSTUCKS > #i3)
                     PRINT_TEXT "Travel :: Walker :: Unstuck failed - Aborted"
                     TRAVEL.WALKER.ABORT = TRUE
                     BREAK 5
                  ENDIF

                  LOCK TRAVEL.WALKER
                  TRAVEL.WALKER.__CREATE_POINT VOID 0
                  POINT_I = "#i<&TRAVEL.WALKER.__CUR_POINT_I&>"
                  MOVE_TO "<&TRAVEL.WALKER.__POINTS_MOVETO.POINT_I.X&>" "<&TRAVEL.WALKER.__POINTS_MOVETO.POINT_I.Y&>" "<&TRAVEL.WALKER.__POINTS_MOVETO.POINT_I.Z&>"
                  UNLOCK TRAVEL.WALKER

               ELSE
                  TRAVEL.WALKER.__UNSTUCKS = ZERO
					ENDIF
            ELSE
               TRAVEL.WALKER.__UNSTUCKS = ZERO
				ENDIF
         ELSE
            TRAVEL.WALKER.__UNSTUCKS = ZERO
			ENDIF

			CHAR_X_OLD = "#i<&CHAR_X&>"
			CHAR_Y_OLD = "#i<&CHAR_Y&>"
			CHAR_Z_OLD = "#i<&CHAR_Z&>"

			ENGINEX.UTILS.SLEEP VOID 2 #i3000 #i3000
		WEND

	RETURN VOID

   /***************************\
   \***************************/

END_CLASS
