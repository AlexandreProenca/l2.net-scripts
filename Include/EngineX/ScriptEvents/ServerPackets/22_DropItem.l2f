
FUNCTION READ 1 PACKET

   PACKET.RESET_INDEX
	PACKET.READ_BYTE VOID

   DEFINE SORTEDLIST DATA 0
   DATA.ADD NULL "OWNER_ID"
   DATA.ADD NULL "OBJECT_ID"
   DATA.ADD NULL "ITEM_ID"
   DATA.ADD NULL "POS_X"
   DATA.ADD NULL "POS_Y"
   DATA.ADD NULL "POS_Z"
   DATA.ADD NULL "STACKABLE" // only show item count if it is a stackable item
   DATA.ADD NULL "ITEM_COUNT"

   PACKET.READ_INT32 DATA.#$OWNER_ID
   PACKET.READ_INT32 DATA.#$OBJECT_ID
   PACKET.READ_INT32 DATA.#$ITEM_ID
   PACKET.READ_INT32 DATA.#$POS_X
   PACKET.READ_INT32 DATA.#$POS_Y
   PACKET.READ_INT32 DATA.#$POS_Z
   PACKET.READ_INT32 DATA.#$STACKABLE
   PACKET.READ_INT32 DATA.#$ITEM_COUNT
   PACKET.READ_INT32 TRUE

RETURN DATA

FUNCTION WRITE 1 DATA

   DEFINE BYTEBUFFER PACKET 1024
   PACKET.WRITE_BYTE 22

   IF ( "DATA.CONTAINS_KEY OWNER_ID" == TRUE )
      PACKET.WRITE_INT32 DATA.#$OWNER_ID
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY OBJECT_ID" == TRUE )
      PACKET.WRITE_INT32 DATA.#$OBJECT_ID
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY ITEM_ID" == TRUE )
      PACKET.WRITE_INT32 DATA.#$ITEM_ID
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY POS_X" == TRUE )
      PACKET.WRITE_INT32 DATA.#$POS_X
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY POS_Y" == TRUE )
      PACKET.WRITE_INT32 DATA.#$POS_Y
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY POS_Z" == TRUE )
      PACKET.WRITE_INT32 DATA.#$POS_Z
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY STACKABLE" == TRUE )
      PACKET.WRITE_INT32 DATA.#$STACKABLE
   ELSE
      PACKET.WRITE_INT32 FALSE
   ENDIF
   IF ( "DATA.CONTAINS_KEY ITEM_COUNT" == TRUE )
      PACKET.WRITE_INT32 DATA.#$ITEM_COUNT
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   PACKET.WRITE_INT32 TRUE

   PACKET.TRIM_TO_INDEX
RETURN PACKET
