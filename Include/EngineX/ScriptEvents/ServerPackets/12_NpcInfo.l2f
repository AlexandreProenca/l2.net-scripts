
FUNCTION READ 1 PACKET

   PACKET.RESET_INDEX
	PACKET.READ_BYTE VOID

   DEFINE SORTEDLIST DATA 0
   DATA.ADD NULL "OBJECT_ID"
   DATA.ADD NULL "TYPE_ID"
   DATA.ADD NULL "ATTACKABLE"
   DATA.ADD NULL "POS_X"
   DATA.ADD NULL "POS_Y"
   DATA.ADD NULL "POS_Z"
   DATA.ADD NULL "HEADING"
   DATA.ADD NULL "MATK_SPEED"
   DATA.ADD NULL "PATK_SPEED"
   DATA.ADD NULL "RUN_SPEED"
   DATA.ADD NULL "WALK_SPEED"
   DATA.ADD NULL "SWIMRUN_SPEED"
   DATA.ADD NULL "SWIMWALK_SPEED"
   DATA.ADD NULL "FLYRUN_SPEED"
   DATA.ADD NULL "FLYWALK_SPEED"
   DATA.ADD NULL "MOVESPEEDMULTI"
   DATA.ADD NULL "ATKSPEEDMULTI"
   DATA.ADD NULL "COLLISIONRADIUS"
   DATA.ADD NULL "COLLISIONHEIGHT"
   DATA.ADD NULL "RHAND"
   DATA.ADD NULL "CHEST"
   DATA.ADD NULL "LHAND"
   DATA.ADD NULL "NAMEABOVE" // name above char 1=true ... ??
   DATA.ADD NULL "ALWAYSRUNNING"
   DATA.ADD NULL "INCOMBAT"
   DATA.ADD NULL "SEEMSDEAD"
   DATA.ADD NULL "SUMMONED" // 0=teleported 1=default 2=summoned
   DATA.ADD NULL "NAME"
   DATA.ADD NULL "TITLE"
   DATA.ADD NULL "USETITLECOLOR" // Title color 0=client default
   DATA.ADD NULL "PVPFLAG"
   DATA.ADD NULL "KARMA"
   DATA.ADD NULL "ABNORMALEFFECT"
   DATA.ADD NULL "CLANID"
   DATA.ADD NULL "CLANCRESTID"
   DATA.ADD NULL "ALLYID"
   DATA.ADD NULL "ALLYCRESTID"
   DATA.ADD NULL "FLYING"
   DATA.ADD NULL "TITLECOLOR" // title color 0=client
   DATA.ADD NULL "ENCHANTEFFECT"
   DATA.ADD NULL "FORM" // CT1.5 Pet form and skills
   DATA.ADD NULL "SPECIALEFFECT"

   PACKET.READ_INT32 DATA.#$OBJECT_ID
   PACKET.READ_INT32 DATA.#$TYPE_ID
   PACKET.READ_INT32 DATA.#$ATTACKABLE
   PACKET.READ_INT32 DATA.#$POS_X
   PACKET.READ_INT32 DATA.#$POS_Y
   PACKET.READ_INT32 DATA.#$POS_Z
   PACKET.READ_INT32 DATA.#$HEADING
   PACKET.READ_INT32 ZERO
   PACKET.READ_INT32 DATA.#$MATK_SPEED
   PACKET.READ_INT32 DATA.#$PATK_SPEED
   PACKET.READ_INT32 DATA.#$RUN_SPEED
   PACKET.READ_INT32 DATA.#$WALK_SPEED
   PACKET.READ_INT32 DATA.#$SWIMRUN_SPEED
   PACKET.READ_INT32 DATA.#$SWIMWALK_SPEED
   PACKET.READ_INT32 DATA.#$FLYRUN_SPEED
   PACKET.READ_INT32 DATA.#$FLYWALK_SPEED
   PACKET.READ_INT32 DATA.#$FLYRUN_SPEED
   PACKET.READ_INT32 DATA.#$FLYWALK_SPEED
   PACKET.READ_DOUBLE DATA.#$MOVESPEEDMULTI
   PACKET.READ_DOUBLE DATA.#$ATKSPEEDMULTI
   PACKET.READ_DOUBLE DATA.#$COLLISIONRADIUS
   PACKET.READ_DOUBLE DATA.#$COLLISIONHEIGHT
   PACKET.READ_INT32 DATA.#$RHAND
   PACKET.READ_INT32 DATA.#$CHEST
   PACKET.READ_INT32 DATA.#$LHAND
   PACKET.READ_BYTE DATA.#$NAMEABOVE
   PACKET.READ_BYTE DATA.#$ALWAYSRUNNING
   PACKET.READ_BYTE DATA.#$INCOMBAT
   PACKET.READ_BYTE DATA.#$SEEMSDEAD
   PACKET.READ_BYTE DATA.#$SUMMONED
   PACKET.READ_STRING DATA.#$NAME
   PACKET.READ_STRING DATA.#$TITLE
   PACKET.READ_INT32 DATA.#$USETITLECOLOR
   PACKET.READ_INT32 DATA.#$PVPFLAG
   PACKET.READ_INT32 DATA.#$KARMA
   PACKET.READ_INT32 DATA.#$ABNORMALEFFECT
   PACKET.READ_INT32 DATA.#$CLANID
   PACKET.READ_INT32 DATA.#$CLANCRESTID
   PACKET.READ_INT32 DATA.#$ALLYID
   PACKET.READ_INT32 DATA.#$ALLYCRESTID
   PACKET.READ_BYTE DATA.#$FLYING
   PACKET.READ_BYTE DATA.#$TITLECOLOR
   PACKET.READ_DOUBLE DATA.#$COLLISIONRADIUS
   PACKET.READ_DOUBLE DATA.#$COLLISIONHEIGHT
   PACKET.READ_INT32 DATA.#$ENCHANTEFFECT
   PACKET.READ_INT32 VOID
   PACKET.READ_INT32 VOID
   PACKET.READ_INT32 DATA.#$FORM
   PACKET.READ_BYTE VOID
   PACKET.READ_BYTE VOID
   PACKET.READ_INT32 DATA.#$SPECIALEFFECT

RETURN DATA

FUNCTION WRITE 1 DATA

   DEFINE BYTEBUFFER PACKET 19999
   PACKET.WRITE_BYTE 12

   IF ( "DATA.CONTAINS_KEY OBJECT_ID" == TRUE )
      PACKET.WRITE_INT32 DATA.#$OBJECT_ID
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY TYPE_ID" == TRUE )
      PACKET.WRITE_INT32 DATA.#$TYPE_ID
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY ATTACKABLE" == TRUE )
      PACKET.WRITE_INT32 DATA.#$ATTACKABLE
   ELSE
      PACKET.WRITE_INT32 FALSE
   ENDIF
   IF ( "DATA.CONTAINS_KEY POS_X" == TRUE )
      PACKET.WRITE_INT32 DATA.#$POS_X
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY POS_Y" == TRUE )
      PACKET.WRITE_INT32 DATA.#$POS_Y
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY POS_Z" == TRUE )
      PACKET.WRITE_INT32 DATA.#$POS_Z
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY HEADING" == TRUE )
      PACKET.WRITE_INT32 DATA.#$HEADING
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   PACKET.WRITE_INT32 ZERO
   IF ( "DATA.CONTAINS_KEY MATK_SPEED" == TRUE )
      PACKET.WRITE_INT32 DATA.#$MATK_SPEED
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY PATK_SPEED" == TRUE )
      PACKET.WRITE_INT32 DATA.#$PATK_SPEED
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY RUN_SPEED" == TRUE )
      PACKET.WRITE_INT32 DATA.#$RUN_SPEED
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY WALK_SPEED" == TRUE )
      PACKET.WRITE_INT32 DATA.#$WALK_SPEED
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY SWIMRUN_SPEED" == TRUE )
      PACKET.WRITE_INT32 DATA.#$SWIMRUN_SPEED
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY SWIMWALK_SPEED" == TRUE )
      PACKET.WRITE_INT32 DATA.#$SWIMWALK_SPEED
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY FLYRUN_SPEED" == TRUE )
      PACKET.WRITE_INT32 DATA.#$FLYRUN_SPEED
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY FLYWALK_SPEED" == TRUE )
      PACKET.WRITE_INT32 DATA.#$FLYWALK_SPEED
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY FLYRUN_SPEED" == TRUE )
      PACKET.WRITE_INT32 DATA.#$FLYRUN_SPEED
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY FLYWALK_SPEED" == TRUE )
      PACKET.WRITE_INT32 DATA.#$FLYWALK_SPEED
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY MOVESPEEDMULTI" == TRUE )
      PACKET.WRITE_DOUBLE DATA.#$MOVESPEEDMULTI
   ELSE
      PACKET.WRITE_DOUBLE ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY ATKSPEEDMULTI" == TRUE )
      PACKET.WRITE_DOUBLE DATA.#$ATKSPEEDMULTI
   ELSE
      PACKET.WRITE_DOUBLE ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY COLLISIONRADIUS" == TRUE )
      PACKET.WRITE_DOUBLE DATA.#$COLLISIONRADIUS
   ELSE
      PACKET.WRITE_DOUBLE ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY COLLISIONHEIGHT" == TRUE )
      PACKET.WRITE_DOUBLE DATA.#$COLLISIONHEIGHT
   ELSE
      PACKET.WRITE_DOUBLE ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY RHAND" == TRUE )
      PACKET.WRITE_INT32 DATA.#$RHAND
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY CHEST" == TRUE )
      PACKET.WRITE_INT32 DATA.#$CHEST
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY LHAND" == TRUE )
      PACKET.WRITE_INT32 DATA.#$LHAND
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY NAMEABOVE" == TRUE )
      PACKET.WRITE_BYTE DATA.#$NAMEABOVE
   ELSE
      PACKET.WRITE_BYTE ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY ALWAYSRUNNING" == TRUE )
      PACKET.WRITE_BYTE DATA.#$ALWAYSRUNNING
   ELSE
      PACKET.WRITE_BYTE ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY INCOMBAT" == TRUE )
      PACKET.WRITE_BYTE DATA.#$INCOMBAT
   ELSE
      PACKET.WRITE_BYTE ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY SEEMSDEAD" == TRUE )
      PACKET.WRITE_BYTE DATA.#$SEEMSDEAD
   ELSE
      PACKET.WRITE_BYTE ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY SUMMONED" == TRUE )
      PACKET.WRITE_BYTE DATA.#$SUMMONED
   ELSE
      PACKET.WRITE_BYTE ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY NAME" == TRUE )
      PACKET.WRITE_STRING DATA.#$NAME
   ELSE
      PACKET.WRITE_STRING "#$"
   ENDIF
   IF ( "DATA.CONTAINS_KEY TITLE" == TRUE )
      PACKET.WRITE_STRING DATA.#$TITLE
   ELSE
      PACKET.WRITE_STRING "#$"
   ENDIF
   IF ( "DATA.CONTAINS_KEY USETITLECOLOR" == TRUE )
      PACKET.WRITE_INT32 DATA.#$USETITLECOLOR
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY PVPFLAG" == TRUE )
      PACKET.WRITE_INT32 DATA.#$PVPFLAG
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY KARMA" == TRUE )
      PACKET.WRITE_INT32 DATA.#$KARMA
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY ABNORMALEFFECT" == TRUE )
      PACKET.WRITE_INT32 DATA.#$ABNORMALEFFECT
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY CLANID" == TRUE )
      PACKET.WRITE_INT32 DATA.#$CLANID
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY CLANCRESTID" == TRUE )
      PACKET.WRITE_INT32 DATA.#$CLANCRESTID
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY ALLYID" == TRUE )
      PACKET.WRITE_INT32 DATA.#$ALLYID
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY ALLYCRESTID" == TRUE )
      PACKET.WRITE_INT32 DATA.#$ALLYCRESTID
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY FLYING" == TRUE )
      PACKET.WRITE_BYTE DATA.#$FLYING
   ELSE
      PACKET.WRITE_BYTE FALSE
   ENDIF
   IF ( "DATA.CONTAINS_KEY TITLECOLOR" == TRUE )
      PACKET.WRITE_BYTE DATA.#$TITLECOLOR
   ELSE
      PACKET.WRITE_BYTE ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY COLLISIONRADIUS" == TRUE )
      PACKET.WRITE_DOUBLE DATA.#$COLLISIONRADIUS
   ELSE
      PACKET.WRITE_DOUBLE ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY COLLISIONHEIGHT" == TRUE )
      PACKET.WRITE_DOUBLE DATA.#$COLLISIONHEIGHT
   ELSE
      PACKET.WRITE_DOUBLE ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY ENCHANTEFFECT" == TRUE )
      PACKET.WRITE_INT32 DATA.#$ENCHANTEFFECT
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   IF ( "DATA.CONTAINS_KEY FLYING" == TRUE )
      PACKET.WRITE_INT32 DATA.#$FLYING
   ELSE
      PACKET.WRITE_INT32 FALSE
   ENDIF
   PACKET.WRITE_INT32 ZERO
   IF ( "DATA.CONTAINS_KEY FORM" == TRUE )
      PACKET.WRITE_INT32 DATA.#$FORM
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF
   PACKET.WRITE_BYTE TRUE
   PACKET.WRITE_BYTE TRUE
   IF ( "DATA.CONTAINS_KEY SPECIALEFFECT" == TRUE )
      PACKET.WRITE_INT32 DATA.#$SPECIALEFFECT
   ELSE
      PACKET.WRITE_INT32 ZERO
   ENDIF

   PACKET.TRIM_TO_INDEX
RETURN PACKET
